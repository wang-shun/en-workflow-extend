<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.chinacreator.c2.omp.service.manage.workflowcommon.WorkAssetRelMapper">	

<!-- ElementID:column_sql,Generated=true -->
<sql id="column_sql">
		  kcomp_asset_work_rel.asset_work_rel_id ,
		  kcomp_asset_work_rel.asset_id ,
		  kcomp_asset_work_rel.work_id ,
		  kcomp_asset_work_rel.work_type ,
		  kcomp_asset_work_rel.remark 
</sql>

<!-- ElementID:whereClause_sql,Generated=true -->
<sql id="whereClause_sql">
	    <if test="assetWorkRelId != null">and kcomp_asset_work_rel.asset_work_rel_id = #{assetWorkRelId}</if>
	    <if test="assetId != null">and kcomp_asset_work_rel.asset_id = #{assetId}</if>
	    <if test="workId != null">and kcomp_asset_work_rel.work_id = #{workId}</if>
	    <if test="workType != null">and kcomp_asset_work_rel.work_type = #{workType}</if>
	    <if test="remark != null">and kcomp_asset_work_rel.remark = #{remark}</if>
</sql>


<!-- ElementID:WorkAssetRelResult,Generated=true -->
<resultMap id="WorkAssetRelResult" type="com.chinacreator.c2.omp.service.manage.workflowcommon.WorkAssetRel">
	<id property="assetWorkRelId" column="asset_work_rel_id"/>
	<result property="assetId" column="asset_id"/>
	<result property="workId" column="work_id"/>
	<result property="workType" column="work_type"/>
	<result property="remark" column="remark"/>
</resultMap>


<!-- ElementName:cache,Generated=true -->
<cache/>

<!-- ElementID:insert,Generated=true -->
<insert id="insert" parameterType="com.chinacreator.c2.omp.service.manage.workflowcommon.WorkAssetRel">
	insert into kcomp_asset_work_rel(
	         <if test="assetWorkRelId != null">asset_work_rel_id</if>
	         <if test="assetId != null">,asset_id</if>
	         <if test="workId != null">,work_id</if>
	         <if test="workType != null">,work_type</if>
	         <if test="remark != null">,remark</if>
	 	 	 )
	 values (
	         <if test="assetWorkRelId != null">#{assetWorkRelId,jdbcType=VARCHAR}</if>
	         <if test="assetId != null">,#{assetId,jdbcType=VARCHAR}</if>
	         <if test="workId != null">,#{workId,jdbcType=VARCHAR}</if>
	         <if test="workType != null">,#{workType,jdbcType=VARCHAR}</if>
	         <if test="remark != null">,#{remark,jdbcType=VARCHAR}</if>
	 	 	 )
</insert>

<!-- ElementID:count,Generated=true -->
<select id="count" parameterType="com.chinacreator.c2.omp.service.manage.workflowcommon.WorkAssetRel" resultType="int">
	select count(*) from kcomp_asset_work_rel 
		 <where>
			<include refid="whereClause_sql"/>
		</where>
</select>

<!-- ElementID:update,Generated=true -->
<update id="update" parameterType="com.chinacreator.c2.omp.service.manage.workflowcommon.WorkAssetRel">
	update kcomp_asset_work_rel
<set>
	<if test="assetId != null">asset_id=#{assetId,jdbcType=VARCHAR},</if>
	<if test="workId != null">work_id=#{workId,jdbcType=VARCHAR},</if>
	<if test="workType != null">work_type=#{workType,jdbcType=VARCHAR},</if>
	<if test="remark != null">remark=#{remark,jdbcType=VARCHAR}</if>
</set>
<where>
	<choose>
        <when test="assetWorkRelId != null">and asset_work_rel_id = #{assetWorkRelId}</when>
        <otherwise>and asset_work_rel_id = </otherwise>
    </choose>
</where>
</update>

<!-- ElementID:updateNull,Generated=true -->
<update id="updateNull" parameterType="map">
	update kcomp_asset_work_rel
	<set>
		<trim suffixOverrides=",">
		    <if test="assetId==null">asset_id = null,</if>
		    <if test="workId==null">work_id = null,</if>
		    <if test="workType==null">work_type = null,</if>
		    <if test="remark==null">remark = null,</if>
		</trim>
	</set>
	<where>
		<choose>
			<when test="assetWorkRelId != null">and asset_work_rel_id = #{assetWorkRelId}</when>
			<otherwise>and asset_work_rel_id = </otherwise>
		</choose>
	</where>
</update>

<!-- ElementID:delete,Generated=true -->
<delete id="delete" parameterType="com.chinacreator.c2.omp.service.manage.workflowcommon.WorkAssetRel">
    delete from kcomp_asset_work_rel where 1=1 and asset_work_rel_id = #{assetWorkRelId}
</delete>

<!-- ElementID:select,Generated=true -->
<select id="select" parameterType="com.chinacreator.c2.omp.service.manage.workflowcommon.WorkAssetRel" resultMap="WorkAssetRelResult">
	select 
		<include refid="column_sql"/>
	    from kcomp_asset_work_rel 
		 <where>
			<include refid="whereClause_sql"/>
		</where>
</select>


<!-- ElementID:insertBatch,Generated=true -->
<insert id="insertBatch" parameterType="list">
	insert into kcomp_asset_work_rel (asset_work_rel_id,asset_id,work_id,work_type,remark) 
<foreach collection="list" item="entity" index="index" separator="union all">
		select 
		#{entity.assetWorkRelId,jdbcType = VARCHAR},
				#{entity.assetId,jdbcType = VARCHAR},
				#{entity.workId,jdbcType = VARCHAR},
				#{entity.workType,jdbcType = VARCHAR},
				#{entity.remark,jdbcType = VARCHAR}
		from dual
</foreach>
</insert>

<!-- ElementID:deleteBatch,Generated=true -->
<delete id="deleteBatch" parameterType="List">
	delete from kcomp_asset_work_rel where asset_work_rel_id in
<trim prefix="(" suffix=")" suffixOverrides=",">
<foreach collection="list" item="entity" separator=",">
	#{entity.assetWorkRelId}
</foreach>
</trim>
</delete>

<!-- ElementID:selectAll,Generated=true -->
<select id="selectAll" resultMap="WorkAssetRelResult">
	select 
		<include refid="column_sql"/>
	    from kcomp_asset_work_rel 
</select>

<!-- ElementID:selectByID,Generated=true -->
<select id="selectByID" parameterType="java.lang.String" resultMap="WorkAssetRelResult">
	select 
		<include refid="column_sql"/>
	    from kcomp_asset_work_rel 
		 where kcomp_asset_work_rel.asset_work_rel_id = #{assetWorkRelId,jdbcType=VARCHAR}
</select>

<!-- ElementID:selectByPage,Generated=true -->
<select id="selectByPage" parameterType="com.chinacreator.c2.omp.service.manage.workflowcommon.WorkAssetRel" resultMap="WorkAssetRelResult">
	select 
		<include refid="column_sql"/>
	    from kcomp_asset_work_rel 
		 <where>
			<include refid="whereClause_sql"/>
		</where>
</select>


<!-- ElementID:selectMany,Generated=true -->
<select id="selectMany" parameterType="list" resultMap="WorkAssetRelResult">
select 
	<include refid="column_sql"/> 
	from kcomp_asset_work_rel 
	where kcomp_asset_work_rel.asset_work_rel_id in (
<foreach collection="list" item="entity" separator="intersect">
		select 
		kcomp_asset_work_rel.asset_work_rel_id
	    from kcomp_asset_work_rel 
		 <where>
	        <if test="entity.assetWorkRelId != null">and kcomp_asset_work_rel.asset_work_rel_id = #{entity.assetWorkRelId}</if>
	        <if test="entity.assetId != null">and kcomp_asset_work_rel.asset_id = #{entity.assetId}</if>
	        <if test="entity.workId != null">and kcomp_asset_work_rel.work_id = #{entity.workId}</if>
	        <if test="entity.workType != null">and kcomp_asset_work_rel.work_type = #{entity.workType}</if>
	        <if test="entity.remark != null">and kcomp_asset_work_rel.remark = #{entity.remark}</if>
		</where>
</foreach>
)
</select>
<!--Generated=true-->
<update id="updateBatch" parameterType="list">
	<foreach collection="list" item="entity" open="begin" close=";end;" separator=";">
			update kcomp_asset_work_rel
	<set>
	<if test="entity.assetId != null">asset_id= #{entity.assetId,jdbcType=VARCHAR},</if>
	<if test="entity.workId != null">work_id= #{entity.workId,jdbcType=VARCHAR},</if>
	<if test="entity.workType != null">work_type= #{entity.workType,jdbcType=VARCHAR},</if>
	<if test="entity.remark != null">remark= #{entity.remark,jdbcType=VARCHAR}</if>
	</set>
		<where>
			<choose>
				<when test="entity.assetWorkRelId != null">and asset_work_rel_id = #{entity.assetWorkRelId}</when>
				<otherwise>and asset_work_rel_id = </otherwise>
			</choose>
		</where>
	</foreach>
</update>
</mapper>