<?xml version="1.0" encoding="UTF-8"?>
<form:Form xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dync="http://www.chinacreator.com/platform/mvc/ui/dync" xmlns:form="http://www.chinacreator.com/platform/mvc/form" name="通用流程任务表单移动" res="" sn="FlowCommonFormMobile" type="form">
  <form:control type="page/normal">
    <form:attributes source="page/normal">
      <dync:attribute default="" group="HTML" id="showHead" name="显示标题" value="">
        <dync:render/>
        <dync:children/>
      </dync:attribute>
      <dync:attribute default="" group="HTML" id="title" name="标题" value="">
        <dync:render/>
        <dync:children/>
      </dync:attribute>
      <dync:attribute default="" group="HTML" id="desc" name="描述" value="">
        <dync:render/>
        <dync:children/>
      </dync:attribute>
      <dync:attribute default="false" group="HTML" id="fixedHeight" name="自动高度" value="false">
        <dync:render/>
        <dync:children/>
      </dync:attribute>
      <dync:attribute default="false" group="HTML" id="compact" name="紧凑页面" value="false">
        <dync:render/>
        <dync:children/>
      </dync:attribute>
      <dync:attribute default="false" group="HTML" id="dirtyCheck" name="脏检查" value="false">
        <dync:render/>
        <dync:children/>
      </dync:attribute>
      <dync:attribute default="" group="事件" id="beforeDataSourceLoad" name="数据源加载前" value="page_beforeDataSourceLoad($params)">
        <dync:render/>
        <dync:children/>
      </dync:attribute>
      <dync:attribute default="" group="事件" id="afterDataSourceLoad" name="数据源加载后" value="page_afterDataSourceLoad()">
        <dync:render/>
        <dync:children/>
      </dync:attribute>
      <dync:attribute default="" group="事件" id="onload" name="页面加载完成" value="page_onload()">
        <dync:render/>
        <dync:children/>
      </dync:attribute>
      <dync:attribute default="" group="注入配置" id="angularJsServices" name="注入服务" value="$q $ocLazyLoad">
        <dync:render/>
        <dync:children/>
      </dync:attribute>
    </form:attributes>
  </form:control>
  <form:child xsi:type="form:Group" id="xunijiliuchengbd" name="新分组">
    <form:control type="container/div">
      <form:attributes source="container/div">
        <dync:attribute default="false" group="HTML配置" id="pure" name="简单div" value="false">
          <dync:render/>
          <dync:children/>
        </dync:attribute>
        <dync:attribute default="12" group="HTML配置" id="span" name="占位数" value="12">
          <dync:render/>
          <dync:children/>
        </dync:attribute>
        <dync:attribute default="0" group="HTML配置" id="offset" name="偏移" value="0">
          <dync:render/>
          <dync:children/>
        </dync:attribute>
        <dync:attribute default="" group="HTML配置" id="collapse" name="隐藏" value="">
          <dync:render/>
          <dync:children/>
        </dync:attribute>
        <dync:attribute default="false" group="HTML配置" id="defaultCollapse" name="隐藏默认值" value="false">
          <dync:render/>
          <dync:children/>
        </dync:attribute>
        <dync:attribute default="false" group="HTML配置" id="autoHeight" name="自动高度" value="false">
          <dync:render/>
          <dync:children/>
        </dync:attribute>
        <dync:attribute default="" group="高级自定义" id="html" name="自定义HTML" value="">
          <dync:render/>
          <dync:children/>
        </dync:attribute>
        <dync:attribute default="" group="高级自定义" id="cssClass" name="自定义class" value="">
          <dync:render/>
          <dync:children/>
        </dync:attribute>
        <dync:attribute default="" group="高级自定义" id="style" name="自定义style" value="">
          <dync:render/>
          <dync:children/>
        </dync:attribute>
        <dync:attribute default="false" group="HTML配置" id="nopadding" name="无内边距" value="true">
          <dync:render/>
          <dync:children/>
        </dync:attribute>
      </form:attributes>
    </form:control>
    <form:child xsi:type="form:Group" id="wftabcontainer" name="简单容器(DIV)">
      <form:control type="container/div">
        <form:attributes source="container/div">
          <dync:attribute default="false" group="HTML配置" id="nopadding" name="无内边距" value="true">
            <dync:render colSpan="2" height="0" multi="false" name="checkbox"/>
            <dync:children/>
          </dync:attribute>
          <dync:attribute default="" group="HTML配置" id="collapse" name="隐藏" value="!$model.tabDisplay">
            <dync:render colSpan="2" height="0" multi="false" name="text"/>
            <dync:children/>
          </dync:attribute>
          <dync:attribute default="false" group="HTML配置" id="defaultCollapse" name="隐藏默认值" value="true">
            <dync:render colSpan="2" height="0" multi="false" name="checkbox"/>
            <dync:children/>
          </dync:attribute>
        </form:attributes>
      </form:control>
      <form:child xsi:type="form:Group" id="newGroup17" name="常规信息">
        <form:control type="container/tabs">
          <form:attributes source="container/tabs">
            <dync:attribute default="false" group="动态页签配置" id="retain" name="保留静态内容" value="true">
              <dync:render/>
              <dync:children/>
            </dync:attribute>
            <dync:attribute default="false" group="动态页签配置" id="dynamic" name="启用动态页签" value="true">
              <dync:render/>
              <dync:children/>
            </dync:attribute>
            <dync:attribute default="" group="动态页签配置" id="dynamicSource" name="页签来源" value="$model.dynamictabs">
              <dync:render/>
              <dync:children/>
            </dync:attribute>
            <dync:attribute default="" group="动态标签事件" id="onDynamicSelected" name="选中事件" value="newGroup17_onDynamicSelected(tab)">
              <dync:render/>
              <dync:children/>
            </dync:attribute>
          </form:attributes>
        </form:control>
        <form:child xsi:type="form:Group" id="newGroup18" name="{{$model.baseinfo}}">
          <form:control type="container/tab">
            <form:attributes source="container/tab">
              <dync:attribute default="false" group="HTML配置" id="active" name="选中" value="true">
                <dync:render/>
                <dync:children/>
              </dync:attribute>
              <dync:attribute default="10px" group="HTML配置" id="padding" name="内边距" value="0px">
                <dync:render/>
                <dync:children/>
              </dync:attribute>
            </form:attributes>
          </form:control>
          <form:child xsi:type="form:Group" id="newGroup22" name="简单容器(DIV)">
            <form:control type="container/toolbar">
              <form:attributes source="container/toolbar">
                <dync:attribute default="center" group="基本设置" id="position" name="按钮位置" value="pull-left">
                  <dync:render/>
                  <dync:children/>
                </dync:attribute>
                <dync:attribute default="" group="样式设置" id="marginBottom" name="底部外边距" value="0">
                  <dync:render/>
                  <dync:children/>
                </dync:attribute>
                <dync:attribute default="" group="样式设置" id="marginTop" name="顶部外边距" value="10">
                  <dync:render/>
                  <dync:children/>
                </dync:attribute>
              </form:attributes>
            </form:control>
            <form:child xsi:type="form:Field" id="newField22" name="提交" res="" customize="true">
              <form:control type="widget/button">
                <form:attributes source="widget/button">
                  <dync:attribute default="" group="事件设置" id="click" name="点击事件" value="autoswitchcommit($event)">
                    <dync:render/>
                    <dync:children/>
                  </dync:attribute>
                  <dync:attribute default="true" group="HTML设置" id="show" name="可见" value="$params.params.processInstanceId!=null">
                    <dync:render/>
                    <dync:children/>
                  </dync:attribute>
                  <dync:attribute default="btn-sm" group="HTML设置" id="size" name="尺寸" value="btn-nl">
                    <dync:render/>
                    <dync:children/>
                  </dync:attribute>
                </form:attributes>
              </form:control>
              <form:validation/>
            </form:child>
            <form:child xsi:type="form:Field" id="newField12" name="流程监控" res="" customize="true">
              <form:control type="widget/button">
                <form:attributes source="widget/button">
                  <dync:attribute default="" group="事件设置" id="click" name="点击事件" value="newField2_click($event)">
                    <dync:render/>
                    <dync:children/>
                  </dync:attribute>
                  <dync:attribute default="btn-sm" group="HTML设置" id="size" name="尺寸" value="btn-nl">
                    <dync:render/>
                    <dync:children/>
                  </dync:attribute>
                  <dync:attribute default="true" group="HTML设置" id="show" name="可见" value="$params.params.processInstanceId!=null">
                    <dync:render/>
                    <dync:children/>
                  </dync:attribute>
                </form:attributes>
              </form:control>
              <form:validation/>
            </form:child>
            <form:child xsi:type="form:Field" id="newField1" name="退回" res="" customize="true">
              <form:control type="widget/button">
                <form:attributes source="widget/button">
                  <dync:attribute default="" group="事件设置" id="click" name="点击事件" value="newField_click($event)">
                    <dync:render/>
                    <dync:children/>
                  </dync:attribute>
                  <dync:attribute default="btn-sm" group="HTML设置" id="size" name="尺寸" value="btn-nl">
                    <dync:render/>
                    <dync:children/>
                  </dync:attribute>
                  <dync:attribute default="true" group="HTML设置" id="show" name="可见" value="false">
                    <dync:render/>
                    <dync:children/>
                  </dync:attribute>
                </form:attributes>
              </form:control>
              <form:validation/>
            </form:child>
            <form:child xsi:type="form:Field" id="submitflow1" name="提交流程" res="" customize="true">
              <form:control type="widget/button">
                <form:attributes source="widget/button">
                  <dync:attribute default="" group="事件设置" id="click" name="点击事件" value="start_flow($event)">
                    <dync:render/>
                    <dync:children/>
                  </dync:attribute>
                  <dync:attribute default="true" group="HTML设置" id="show" name="可见" value="$params.params.processInstanceId==null">
                    <dync:render/>
                    <dync:children/>
                  </dync:attribute>
                  <dync:attribute default="btn-sm" group="HTML设置" id="size" name="尺寸" value="btn-nl">
                    <dync:render/>
                    <dync:children/>
                  </dync:attribute>
                </form:attributes>
              </form:control>
              <form:validation/>
            </form:child>
            <form:child xsi:type="form:Field" id="newField5" name="保存" customize="true">
              <form:control type="widget/button">
                <form:attributes source="widget/button">
                  <dync:attribute default="true" group="HTML设置" id="show" name="可见" value="$params.params.processInstanceId==null">
                    <dync:render/>
                    <dync:children/>
                  </dync:attribute>
                  <dync:attribute default="" group="事件设置" id="click" name="点击事件" value="newField4_click($event)">
                    <dync:render/>
                    <dync:children/>
                  </dync:attribute>
                  <dync:attribute default="btn-sm" group="HTML设置" id="size" name="尺寸" value="btn-nl">
                    <dync:render/>
                    <dync:children/>
                  </dync:attribute>
                </form:attributes>
              </form:control>
              <form:validation/>
            </form:child>
            <form:child xsi:type="form:Field" id="button" name="结束" customize="true">
              <form:control type="widget/button">
                <form:attributes source="widget/button">
                  <dync:attribute default="btn-sm" group="HTML设置" id="size" name="尺寸" value="btn-nl">
                    <dync:render colSpan="1" height="0" multi="false" name="select">
                      <dync:item name="很小" value="btn-xs"/>
                      <dync:item name="小" value="btn-sm"/>
                      <dync:item name="正常" value="btn-nl"/>
                      <dync:item name="大" value="btn-lg"/>
                    </dync:render>
                    <dync:children/>
                  </dync:attribute>
                  <dync:attribute default="btn-primary" group="HTML设置" id="style" name="样式" value="btn-danger">
                    <dync:render colSpan="1" height="0" multi="false" name="select">
                      <dync:item name="默认" value="btn-default"/>
                      <dync:item name="主要" value="btn-primary"/>
                      <dync:item name="成功" value="btn-success"/>
                      <dync:item name="信息" value="btn-info"/>
                      <dync:item name="警告" value="btn-warning"/>
                      <dync:item name="危险" value="btn-danger"/>
                      <dync:item name="链接" value="btn-link"/>
                      <dync:item name="通用" value="btn-white no-border"/>
                    </dync:render>
                    <dync:children/>
                  </dync:attribute>
                  <dync:attribute default="" group="事件设置" id="click" name="点击事件" value="button_click($event)">
                    <dync:render colSpan="1" height="0" multi="false" name="event">
                      <dync:item name="params" value="$event"/>
                    </dync:render>
                    <dync:children/>
                  </dync:attribute>
                  <dync:attribute default="true" group="HTML设置" id="show" name="可见" value="$model.actions.endprocess!=undefined">
                    <dync:render colSpan="1" height="0" multi="false" name="checkboxAndExpr"/>
                    <dync:children/>
                  </dync:attribute>
                </form:attributes>
              </form:control>
              <form:validation/>
            </form:child>
          </form:child>
          <form:child xsi:type="form:Group" id="newGroup1" name="简单容器(DIV)">
            <form:control type="container/div">
              <form:attributes source="container/div">
                <dync:attribute default="false" group="HTML配置" id="pure" name="简单div" value="true">
                  <dync:render/>
                  <dync:children/>
                </dync:attribute>
                <dync:attribute default="" group="高级自定义" id="html" name="自定义HTML" value="newGroup_html">
                  <dync:render/>
                  <dync:children/>
                </dync:attribute>
              </form:attributes>
            </form:control>
          </form:child>
        </form:child>
      </form:child>
    </form:child>
    <form:child xsi:type="form:Group" id="wfsinglepagecontainer" name="流程操作">
      <form:control type="container/div">
        <form:attributes source="container/div">
          <dync:attribute default="false" group="HTML配置" id="defaultCollapse" name="隐藏默认值" value="true">
            <dync:render colSpan="2" height="0" multi="false" name="checkbox"/>
            <dync:children/>
          </dync:attribute>
          <dync:attribute default="" group="HTML配置" id="collapse" name="隐藏" value="$model.tabDisplay">
            <dync:render colSpan="2" height="0" multi="false" name="text"/>
            <dync:children/>
          </dync:attribute>
        </form:attributes>
      </form:control>
      <form:child xsi:type="form:Group" id="wftoobardiv" name="简单容器(DIV)">
        <form:control type="container/div">
          <form:attributes source="container/div">
            <dync:attribute default="false" group="HTML配置" id="nopadding" name="无内边距" value="true">
              <dync:render colSpan="2" height="0" multi="false" name="checkbox"/>
              <dync:children/>
            </dync:attribute>
            <dync:attribute default="" group="HTML配置" id="collapse" name="隐藏" value="formentity.global.handleinline">
              <dync:render colSpan="2" height="0" multi="false" name="text"/>
              <dync:children/>
            </dync:attribute>
            <dync:attribute default="" group="高级自定义" id="html" name="自定义HTML" value="wftoobardiv_html">
              <dync:render colSpan="2" height="0" multi="false" name="html"/>
              <dync:children/>
            </dync:attribute>
          </form:attributes>
        </form:control>
      </form:child>
      <form:child xsi:type="form:Group" id="newGroup" name="简单容器(DIV)">
        <form:control type="container/div">
          <form:attributes source="container/div">
            <dync:attribute default="false" group="HTML配置" id="pure" name="简单div" value="true">
              <dync:render/>
              <dync:children/>
            </dync:attribute>
            <dync:attribute default="" group="高级自定义" id="html" name="自定义HTML" value="singlePage_html">
              <dync:render/>
              <dync:children/>
            </dync:attribute>
          </form:attributes>
        </form:control>
      </form:child>
    </form:child>
  </form:child>
  <form:datasources>
    <form:datasource xsi:type="form:Inputs"/>
  </form:datasources>
  <form:scripts>//提交 自动决定退回与流转
autoswitchcommit:function($event){
	//func 为业务表单提交前验证函数
/*	if(!angular.isUndefined($model.func)){
		var a = $model.func();
		if(a==false){
			Messenger.post({
				'message': &quot;必填项为空！&quot;,
	            'type': 'error',
	            'hideAfter':4
	        });	
			return;
		}	
	}
*/
	if($scope.formentity.global.oppositive || $model.actions.return == undefined){ //积极意见或者流程没有退回配置 流转流程

		if(!$scope.formentity.global.oppositive &amp;&amp; $model.actions.return == undefined){
			console.warn(&quot;本环节没有退回配置，但是是否定意见。默认继续走流程！&quot;)
		}
	
		//func 为业务表单提交前验证函数
		if(!angular.isUndefined($model.func)){
			var a = $model.func(&quot;submit&quot;);
			if(a==false){
				Messenger.post({
					'message': &quot;必填项为空！&quot;,
		            'type': 'error',
		            'hideAfter':3
		        });	
				return;
			}	
		}	
		//如果有下一步选人页面弹出就不用 确认页面了？
		var hasSelectPage = !$scope.formentity.global.handleinline 
			&amp;&amp; $model.actions.freechoose != undefined
			&amp;&amp; $model.actions.freechoose != &quot;&quot;;
		if(!hasSelectPage){
			Modal.openConfirm({message:'确定提交？'},function(){
				functions.commit($event)
			})
		}else{
			functions.commit($event)
		}
	}else{
		if($model.actions.return == undefined){
			Messenger.post({
				'message': &quot;本环节没有退回配置，请联系系统维护人员！&quot;,
	            'type': 'error',
	            'hideAfter':4
	        });			
	        return
		}
		//退回 需不需要必填项验证？
		if(!angular.isUndefined($model.func)){
			var a = $model.func(&quot;return&quot;);
			if(a==false){
				Messenger.post({
					'message': &quot;必填项为空！&quot;,
		            'type': 'error',
		            'hideAfter':4
		        });	
				return;
			}	
		}		
		//否定意见 退回流程
		Modal.openConfirm({message:'确定提交？'},function(){
			functions.newField_click($event)
		})	
	}
},
//提交
commit:function($event){
	console.log(&quot;submited $scope.formentity&quot;,$scope.formentity);

//	console.log(&quot;$model.funcsbeforsubmit&quot;,$model.funcsbeforsubmit);
	//必填项等验证通过才执行 字段页面提交前函数
	$model.funcsbeforsubmit();

	if($model.isCountersign){  //会签环节 不选人，下一步处理人用环节外围配置
		functions.newField5_click($event);
		return;		
	}
	//没有集成那个处理模板
	if(!$scope.formentity.global.handleinline 
			&amp;&amp; $model.actions.freechoose != undefined
			&amp;&amp; $model.actions.freechoose != &quot;&quot;){
		var url = $model.actions.freechoose.openUrl;
		Modal.open(
				url,
				{
					actions:$model.actions,
					formentity:$scope.formentity,
					params:$params.params,
					transitions:$model.getOutTransition.result,
					curUserId:$scope.subject.id
				},
				function(data){
					console.log(&quot;choosed&quot;,data);
					$model.assigneeList = data.assigneeList==&quot;&quot;?undefined:data.assigneeList;//避免传空字符进去，影响判断;
					$model.assigneeid = data.assignee==&quot;&quot;?undefined:data.assignee;
					$model.nexthandlegroupid = data.candidateGroups==&quot;&quot;?undefined:data.candidateGroups;
					$model.nexthandleid = data.candidateUsers==&quot;&quot;?undefined:data.candidateUsers;
					$model.ccInform = data.ccInform;
					$model.transition = data.transition;
					$model.dest = $model.transition.dest;
					$model.transitionId = $model.transition.id;
					
					$model.variables = {
						assignee:$model.assigneeid,
						candidateGroups:$model.nexthandlegroupid,
						candidateUsers:$model.nexthandleid,
						assigneeList:$model.assigneeList,
						wfComment:$model.opinion
					}					
					
					functions.newField5_click($event);
				
			});
		return;
	}

	if(!$scope.formentity.global.handleinline){
		$model.variables = {
			assignee:$model.assigneeid,
			candidateGroups:$model.nexthandlegroupid,
			candidateUsers:$model.nexthandleid,
			assigneeList:$model.assigneeList,
			wfComment:$model.opinion
		}	
	}else{  //集成处理页面模板了 一些参数用模板设置到全局中的值
		$model.variables = $scope.formentity.global.handleinline.variables
		$model.transition = $scope.formentity.global.handleinline.transition
		$model.transitionId = $model.transition.id
		$model.dest = $model.transition.dest
	}
	functions.newField5_click($event);
},
//提交
newField5_click:function($event){
	var transitionId = $model.transitionId;

	//return;
	$model.formId = $model.serviceproduct.result.formId;

	if(!angular.isUndefined($scope.func)){
		var a = $scope.func();	
	}	
	
	var userId =  $scope.subject.id;
	var processDefinitionId = $params.params.processDefinitionId;
	var moduleId =  $params.params.moduleId;
	var taskDefKey =  $params.params.taskDefKey;
	$http.post(&quot;flow/goanywhere&quot;,
		{
			ccInform:$model.ccInform,
			transition:$model.transition,
			transitionId:transitionId,
			formId:$model.formId,
			wfOperator:{
				userId:userId,
				businessData:{
					moduleId:moduleId,
					businessKey:$model.businessKey
				}
		    },
		    businessKey:$params.params.businessKey,
			isStart:false,
			processDefinitionId:$params.params.processDefinitionId,
			moduleId:$params.params.moduleId,
			currenTaskId:$params.params.taskId,
			destTaskDefinitionKey:$model.dest.id,
			useHisAssignee:false,
			variables:$model.variables,
			entity:$scope.formentity,
			proInsId:$params.params.processInstanceId,
			taskDefKey:$params.params.taskDefKey,
			opinion:$model.opinion
		
	}).success(function(data){
		if(data.result == &quot;200&quot;){
/*			 Messenger.post({
				 'message': &quot;  操作成功！&quot;,
				 'type': 'success',
				 'hideAfter':4
			 });*/
			 functions.jumpSuccess()
//			 TabOperator.closeTab(TabOperator.getCurrentTab());
		}else{
			 Messenger.post({
				 'message': &quot;  something wrong！&quot;,
				 'type': 'error',
				 'hideAfter':4
			 });			
		}
	});		
},
//流程监控
newField2_click:function($event){
	var paramsjson = {
		processInstanceId:$params.params.processInstanceId,
		processDefinitionId:$params.params.processDefinitionId
	}
	Modal.open(&quot;f/monitorProcess&quot;,paramsjson);			
},


page_onload:function(){
	$scope.operatefuncs = {}
	$scope.operatefuncs.startFlow = functions.start_flow
	$scope.operatefuncs.submit = functions.autoswitchcommit
	$scope.operatefuncs.processmonitor = functions.newField2_click
	$scope.operatefuncs.save = functions.newField4_click
},
//回退
newField_click:function($event){

	//提交前函数 各字段可以在这里把自己的数据放入业务js对象
	$model.funcsbeforsubmit();	
	
	var userId =  $scope.subject.id;
	var processDefinitionId = $params.params.processDefinitionId;
	var moduleId =  $params.params.moduleId;
	var taskDefKey =  $params.params.taskDefKey;
	variables = {
	}
	$http.post(&quot;flow/reject&quot;,
		{
			rejectMessage:&quot;reject&quot;,
			
			formId:$model.formId,
			wfOperator:{
				userId:userId,
				businessData:{
					moduleId:moduleId,
					businessKey:$model.businessKey
				}
		    },
		    curActivity:$model.transition.src,
		    businessKey:$params.params.businessKey,
			isStart:false,
			processDefinitionId:$params.params.processDefinitionId,
			moduleId:$params.params.moduleId,
			currenTaskId:$params.params.taskId,
			destTaskDefinitionKey:$model.actions.return.returnTo,
			useHisAssignee:true,
			variables:variables,
			entity:$scope.formentity,
			proInsId:$params.params.processInstanceId,
			taskDefKey:$params.params.taskDefKey,
			opinion:$model.opinion		
	}).success(function(data){
/*			 Messenger.post({
			    'message': &quot;退回成功&quot;,
			    'type': 'success',
			    'hideAfter':4
			 });*/
			 functions.jumpSuccess()
//			 TabOperator.closeTab(TabOperator.getCurrentTab());
		});		
},

newField2_clickEvent:function(value,checked,checkboxObj){
	var radioGroup = $view.radios.getOptions();  
	if(value.value==&quot;处理完成&quot;){
		$view.nextdiv.show();
		$view.chulirendiv.show();
	}
	if(value.value==&quot;退回&quot;){
		$view.nextdiv.hide();
		$view.chulirendiv.hide();
	}
	angular.forEach(radioGroup,function(v){  
		//如果选项值为2，添加该选项的点击事件  
		if(v.value!=value.value){  
			v.checked = false;  
		}  
	}); 
},
page_afterDataSourceLoad:function(){
	//开始流程
	if($params.params.taskId == null){
		//地址栏有 草稿， $params.params.businessKey 这个值在befordatasourceload里面 从地址栏把值拿了过来
		if(!angular.isUndefined($params.params.businessKey)){
			$model.formBusinessKey = $params.params.businessKey
			$model.businessKey = $model.formBusinessKey
		}else{
			$model.businessKey =  $params.params.moduleId+&quot;_&quot;+this.timeGenerator()
		}
		
		if(angular.isUndefined($params.params.businessKey)){
			$params.params.businessKey = $model.businessKey;
		}		
	}
	


	
	$params.params.formBusinessKey = $model.formBusinessKey;
	$http.post(&quot;ws/taskHandleInfo&quot;,{&quot;moduleId&quot;:$params.params.moduleId,formBusinessKey:$model.formBusinessKey,&quot;taskId&quot;:$params.params.taskId}).success(function(data){
		var taskInfo = data.result
		
		$model.actions = taskInfo.actions
		$model.getOutTransition = {}
		$model.getOutTransition.result = taskInfo.transitions
		$model.serviceproduct = {}
		$model.serviceproduct.result = taskInfo.serviceProduct	
		$model.activityactions = {}
		$model.activityactions.result = taskInfo.actions		
		
		if(!angular.isUndefined(taskInfo.params.businessKey)){		
			$params.params.businessKey = taskInfo.params.businessKey;
			$model.businessKey = taskInfo.params.businessKey;
		}

		$params.params.processDefinitionId =  taskInfo.params.processDefinitionId; 
		$params.params.moduleId = taskInfo.params.moduleId;
		$params.params.processInstanceId = taskInfo.params.proInsId;
		$params.params.taskDefKey = taskInfo.params.taskDefId;
		
		$scope.permissionData = taskInfo.permissonData
/*		var promises = new Array()
		//保证tab页中有权限数据
		promises.push($http.post(&quot;ws/getalltabsforactivity&quot;,{productId:$params.params.moduleId,params:$params.params,activityId:$params.params.taskDefKey}))	*/	
 		
		$scope.formentity = taskInfo.entity
		//初始化全局的用来交换信息的变量
		functions.initGlobalParam()
//		console.log($scope.formentity.result);

		var locationparams = $location.$$search;
		//取得地址栏中的参数 赋值地址栏参数到实体
		for(var a in locationparams){
			//businessKey属性不要放入formentity 会覆盖了原来的同名属性
			if(a!=&quot;businessKey&quot;){
				$scope.formentity[a] = locationparams[a];
			}	
		}		
		console.log(&quot;formentity&quot;,$scope.formentity);

		functions.getviewinfo($params.params.moduleId,$params.params.processInstanceId,$params.params.businessKey)

	    $model.dynamictabs = taskInfo.tabs;
	    if($model.dynamictabs.length == 0){
	        $model.tabDisplay = false
	    }else{
	        $model.tabDisplay = true
	    } 	
	    
	    if($model.tabDisplay){
	        $model.tabUrl = 'f/WfbusinessFormGeneratormoblie';
	    }else{
	    	$model.singleUrl = 'f/WfbusinessFormGeneratormoblie'	        
	    } 	    

		return
	})

},
getviewinfo:function(moduleId,processInstanceId,businessKey){
	if(&quot;undefined&quot; != typeof WORKFLOW_CONS){
		var personality = WORKFLOW_CONS.PERSONALITY;
		if(personality!=undefined&amp;&amp;!angular.isUndefined(personality[$model.serviceproduct.result.productNo])){
			$model.baseinfo = personality[$model.serviceproduct.result.productNo].BASEINFO;
		}	
	}else{
		$model.baseinfo = &quot;基本信息&quot;;
	}

	$model.actions = $model.activityactions.result;
	$model.selectfuncs = new Array();
	//tab页选择事件
	$scope.$on(&quot;tabselect&quot;,function(event,msg){
//		console.log(&quot;recmsg&quot;,msg);
		$model.selectfuncs.push(msg);
	});

	//字段页面验证函数
	$scope.$on('func',function(event,msg){
		$model.func = msg;
	});
	//字段页面提交流程前执行函数
	$scope.$on('funcsbeforsubmit',function(event,msg){
		$model.funcsbeforsubmit = msg;
	});
	//tab 页中的check函数
	$model.tabcheckfuncs = new Array();
	$scope.$on(&quot;tabcheck&quot;,function(event,msg){
//		console.log(&quot;recmsg&quot;,msg);
		$model.tabcheckfuncs.push(msg);
	});	
	$model.activityName = $model.getOutTransition.result[0].src.name;

	$model.formId = $model.serviceproduct.result.formId;


	
	$params.params.serviceproduct = $model.serviceproduct.result;

	$model.handleway = &quot;处理完成&quot;;
	
//默认选中第一个步骤并触发值变换事件
	$model.transitionId = $model.getOutTransition.result[0].id;	

//当前环节属性
	var ac = $model.getOutTransition.result[0].src.porperties;
	if((!angular.isUndefined(ac)&amp;&amp;ac.multiInstance == &quot;parallel&quot;) 
			|| (!angular.isUndefined(ac)&amp;&amp;ac.multiInstance == &quot;sequential&quot;)){ //会签
		var item = $model.getOutTransition.result[0];
		item.name = &quot;多人处理&quot;;
		$model.isCountersign = true;
		$model.getOutTransition.result = new Array();
		$model.getOutTransition.result[0] = item;
	}
	$model.transition = $model.getOutTransition.result[0];

	$model.dest = $model.transition.dest;
	//如果下一步是最后一步结束事件
	if($model.dest.porperties.type==&quot;endEvent&quot;){ 
		$params.nextname = &quot;结束&quot;;
	}
	//如果下一步是会签事件
	if($model.dest.porperties.multiInstance==&quot;parallel&quot; || $model.dest.porperties.multiInstance==&quot;sequential&quot;){
		$model.isParallel = true;
	}

},
//tab页的验证函数
dotabchecks:function(){
	var a = $model.tabcheckfuncs;
	var result = {&quot;status&quot;:true,&quot;msg&quot;:&quot;everthing is ok!&quot;};
	for(var aa in a){
		var checkresult = a[aa].func();
		if(checkresult.status==false){
//			console.log(a[aa]);
			return  checkresult;
		}
	}
	return result;	
},

dateconvert:function(a){
	var date = new Date(a);
	return date.Format(&quot;MM/dd hh:mm&quot;);;
},

page_beforeDataSourceLoad:function($params){
	var Request = functions.GetRequest();  
 
	var locationparams = $location.$$search;
	console.log(&quot;locationparams&quot;,locationparams);
	$params.params = {};
	$params.params.taskId = locationparams.taskId || $params.taskId || Request[&quot;taskId&quot;]
	$params.params.moduleId = locationparams.moduleId || $params.moduleId || Request[&quot;moduleId&quot;]
	$params.params.activityId = locationparams.activityId || $params.activityId || Request[&quot;activityId&quot;]
	$params.params.taskDefKey = locationparams.activityId || $params.activityId || Request[&quot;activityId&quot;]
	$params.params.businessKey = locationparams.businessKey || $params.businessKey || Request[&quot;businessKey&quot;]
	$params.params.processInstanceId = locationparams.proInsId || $params.proInsId || Request[&quot;proInsId&quot;]
	$params.params.processDefinitionId =  locationparams.processDefinitionId || $params.processDefinitionId || Request[&quot;processDefinitionId&quot;]

},
//获取地址栏里（URL）传递的参数  
GetRequest: function(){  
    //url例子：XXX.aspx?ID=&quot; + ID + &quot;&amp;Name=&quot; + Name；  
    var url = location.search; //获取url中&quot;?&quot;符以及其后的字串  
    var theRequest = new Object();  
    if(url.indexOf(&quot;?&quot;) != -1)//url中存在问号，也就说有参数。  
    {   
      var str = url.substr(1);  
        strs = str.split(&quot;&amp;&quot;);  
      for(var i = 0; i &lt; strs.length; i ++)  
        {   
         theRequest[strs[i].split(&quot;=&quot;)[0]]=unescape(strs[i].split(&quot;=&quot;)[1]);  
        }  
    }  
    return theRequest;  
},

//选中处理人
newField3_change:function(){
	
},
//生成随机数
timeGenerator:function(){
/*	 var day=new Date();
	   var Year=0;
	   var Month=0;
	   var Day=0;
	   var Hour = 0;
	   var Minute = 0;
	   var Second = 0;
	   var CurrentDate=&quot;&quot;;
	   //初始化时间
	   Year       = day.getYear();
	   Month      = day.getMonth()+1;
	   Day        = day.getDate()
	   Hour       = day.getHours();
	   Minute     = day.getMinutes();
	   Second     = day.getSeconds();
	   CurrentDate = (Year+&quot;&quot;)+(&quot;&quot;+Month)+(Day+&quot;&quot;)+(&quot;&quot;+Hour)+(&quot;&quot;+Minute)+(Second+&quot;&quot;);
*/
	var a = Math.random()*(10000000000000)
	var ran = Math.floor(a)
	return ran;
		
},
start_flow:function($event){
	//	func 为业务表单提交前验证函数
	if(!angular.isUndefined($model.func)){
		//提交前验证
		var a = $model.func(&quot;submit&quot;);
		if(a==false){
			Messenger.post({
				'message': &quot;必填项为空或格式不正确！&quot;,
	            'type': 'error',
	            'hideAfter':4
	        });	
			return;
		}	
	}
	if($model.isCommit){
		Messenger.post({
			'message': &quot;流程已提交，请勿重复提交！&quot;,
            'type': 'error',
            'hideAfter':4
        });	
        return;
	}
	//如果有下一步选人页面弹出就不用 确认页面了？
	var hasSelectPage = $model.actions.freechoose != undefined;
	if(!hasSelectPage){
		Modal.openConfirm({message:'确定提交？'},function(){
			functions.start_flowdo($event)
		})		
	}else{
		functions.start_flowdo($event)
	}
},
start_flowdo:function($event){
 	//提交前函数 各字段可以在这里把自己的数据放入业务js对象
 	$model.funcsbeforsubmit();
 		
	var checkresult = functions.dotabchecks();
	if(checkresult.status==false){
		Messenger.post({
			'message': checkresult.msg,
            'type': 'error',
            'hideAfter':4
        });		
        return;	
	}
	if($model.actions.freechoose!=undefined){
		var url = $model.actions.freechoose.openUrl;
		console.log('$model.getOutTransition.result ',$model.getOutTransition.result);
		Modal.open(
				url,
				{
					actions:$model.actions,
					formentity:$scope.formentity,
					params:$params.params,
					transitions:$model.getOutTransition.result,
					curUserId:$scope.subject.id
				},
				function(data){
					console.log(&quot;choosed&quot;,data);
					$model.assigneeList = data.assigneeList==&quot;&quot;?undefined:data.assigneeList;//避免传空字符进去，影响判断;
					$model.assigneeid = data.assignee==&quot;&quot;?undefined:data.assignee;
					$model.nexthandlegroupid = data.candidateGroups==&quot;&quot;?undefined:data.candidateGroups;
					$model.nexthandleid = data.candidateUsers==&quot;&quot;?undefined:data.candidateUsers;
					$model.ccInform = data.ccInform;
					$model.transition = data.transition;
					$model.dest = $model.transition.dest;
					$model.transitionId = $model.transition.id;
					functions.submitflow_click($event);		
		});
		return;
	}
	functions.submitflow_click($event);
},
//提交流程
submitflow_click:function($event){
	var processDefinitionId = $params.params.processDefinitionId;
	var moduleId =  $params.params.moduleId;
	var taskDefKey =  $params.params.taskDefKey;
	var userId = $scope.subject.id;

	variablesJson = {
			assignee:$model.assigneeid,
			assigneeList:$model.assigneeList,
			candidateGroups:$model.nexthandlegroupid,
			candidateUsers:$model.nexthandleid,
			&quot;productNo&quot;:$location.search().productNo,
			&quot;formId&quot;:$model.serviceproduct.result.formId,
			&quot;serviceTypeId&quot;:$model.serviceproduct.result.serviceTypeId
			};

	$scope.formentity.businessKey = $model.businessKey;
	$scope.formentity.moduleId = moduleId;
//	console.log(&quot;formId&quot;,$model.formId);
//	$model.formId = $location.search().formId;
	$http.post(&quot;flow/startflow&quot;,
			{
						ccInform:$model.ccInform,
						transition:$model.transition,
						moduleId:moduleId,
						formId:$model.formId,
						businessKey:$model.businessKey,
						processDefinitionId:processDefinitionId,
						variables:variablesJson,
						entity:$scope.formentity,
						wfOperator:{
							userId:userId,
							businessData:{
								moduleId:moduleId,
								businessKey:$model.businessKey
							}
						}
					 
			}
			).success(function(data){
					if(data.result=='200'){
							$model.isCommit = true;
/*							Messenger.post({
								'message': &quot;操作成功!&quot;,
				                'type': 'success',
				                'hideAfter':4
				            });*/
				            functions.jumpSuccess()
//							TabOperator.closeTab(TabOperator.getCurrentTab());
					}else{
							Messenger.post({
								'message': &quot;流程提交失败，请关闭本页面后重试&quot;,
				                'type': 'error',
				                'hideAfter':4
				            });				
					}
		  });	
},

newGroup7_onSelect:function(){
//	console.log(&quot;workId&quot;,$model.businessKey);
	$view.listwork.setParams({&quot;formId&quot;:$model.serviceproduct.result.formId,&quot;workId&quot;:$model.businessKey});
},

assetId_customFormatter:function(cellvalue,options,rowObject){
//	console.log(cellvalue.name);
	return cellvalue.name;
},

close_tab:function(){
//	TabOperator.closeTab(TabOperator.getCurrentTab());
},
//tab选择
newGroup17_onDynamicSelected:function(tab){
	var funcs = $model.selectfuncs;
	console.log(&quot;$model.selectfuncs&quot;,$model.selectfuncs);
	for(var i=0;i&lt;funcs.length;i++){
		funcs[i].func(tab);
	}
},
// save draft
newField4_click:function($event){
	if(!angular.isUndefined($model.func)){
		var a = $model.func(&quot;draft&quot;);
		if(a==false){
			Messenger.post({
				'message': &quot;验证不通过！&quot;,
	            'type': 'error',
	            'hideAfter': 2
	        });	
			return;
		}	
	}	
	var businessKey;
//	地址栏没有 则是新工单
	if(angular.isUndefined($model.formBusinessKey)){
		businessKey = $model.businessKey;
		$scope.formentity.businessKey = $model.businessKey;
	}else{
	//地址栏中已经有businessKey 说明是草稿的第二次保存 businessKey 用原来的
		$scope.formentity.businessKey = $model.formBusinessKey;
		businessKey = $model.formBusinessKey;
	}
	$scope.formentity.status = &quot;draft&quot;;
	var form = {};
	form.formId = $model.formId;
	$http.post(&quot;ws/updateFormDataWithExternalTable&quot;,{&quot;businessKey&quot;:businessKey,&quot;entityjson&quot;:$scope.formentity,&quot;form&quot;:form,curUserId:$scope.subject.id,map:{&quot;moduleId&quot;:$params.params.moduleId}}).success(function(){
//		TabOperator.closeTab(TabOperator.getCurrentTab());
		Messenger.post({
								'message': &quot;保存成功!&quot;,
				                'type': 'success',
				                'hideAfter':4
				            });
	});
},
 //结束流程按钮
 button_click:function($event){
 	Modal.openConfirm({message:&quot;确认删除流程实例？删除后将不可恢复！&quot;},
 			function(){
 				$http.post(&quot;ws/deleteprocessins&quot;,
 					{					
 							json:$scope.formentity,
 							wfOperator:{
 								userId:$scope.subject.id,
 								businessData:{
 									moduleId:$params.params.moduleId,
 									businessKey:$model.businessKey
 								}
 						    },
 						    deleteReason:&quot;用户删除&quot;,
 						    processInstanceId:$params.params.processInstanceId,
 						    formId:$model.formId,
 						    deleteHistory:true				
 					}).success(function(){
// 						TabOperator.closeTab(TabOperator.getCurrentTab());
 						Messenger.post({
 												'message': &quot;删除成功!&quot;,
 								                'type': 'success',
 								                'hideAfter':4
 								            });					
 					});
 			});
 },
 initGlobalParam:function(){
 	//全局 用来通信
	$scope.formentity.global = {}
	//默认积极意见 让流程可以流转
	$scope.formentity.global.oppositive = true
	var actions = $model.activityactions.result
	if(actions.sendviewuser){
		if(!$scope.formentity.global.buttons){
			$scope.formentity.global.buttons = new Array()
		}
		var sendbutton = {
				id:&quot;senduser&quot;,
				name:&quot;传阅&quot;,
				click:function(){
					Modal.open(&quot;f/multipleuserchoose4&quot;,{choosed:$model.senduserchoosed},function(data){
						$model.senduserchoosed = functions.removeuserorgtreeprefix(data.users);
						functions.generateString();
					});				
					
				}
				}
		$scope.formentity.global.buttons.push(sendbutton)
		
	}
	//观察者
	var subject = {}
	subject.obs = new Array()
	subject.changed = function(fieldNo,data){
		this.obs.forEach(function(ob){
			ob.func(fieldNo,data)
		})
	}
	subject.regist = function(fieldNo,func){
		var ob = {}
		ob.fieldNo = fieldNo
		ob.func = func
		this.obs.push(ob)
	}
	$scope.formentity.global.subject = subject
 },
 //生成以逗号分隔多个id的一个字符串
generateString:function(){
	var s = undefined;
	var nameStr = undefined;
	$model.senduserchoosed.forEach(function(e,i){
		if(s==undefined){
			s = e.id;
			nameStr = e.name;
		}else{
			s = s + &quot;,&quot;+e.id;
			nameStr = nameStr + &quot;,&quot; + e.name;
		}
	});
	$scope.formentity.wfsendUserRead = s;
},
removeuserorgtreeprefix:function(users){
	for(var i in users){
		if(users[i].id.indexOf(&quot;user&quot;) !== -1){
			users[i].id = users[i].id.substring(5)
		}	
	}
	return users;
},
jumpSuccess:function(){
	location.href = &quot;workflow/mobile/success.html&quot;
}</form:scripts>
  <form:htmls>
&lt;script type=&quot;text/ng-template&quot; id=&quot;newGroup_html&quot;>
	&lt;div ng-include=$model.tabUrl  ng-init=&quot;$params={'pModel':$model,'params':$params.params,'isAccordian':false}&quot;>&lt;/div>
&lt;/script>
&lt;script type=&quot;text/ng-template&quot; id=&quot;singlePage_html&quot;>
	&lt;div ng-include=$model.singleUrl  ng-init=&quot;$params={'pModel':$model,'params':$params.params,'isAccordian':false}&quot;>&lt;/div>
&lt;/script>

&lt;style>
#workflowhandlediv .form-group{/*输入框*/
    padding: 0px;
 }
#workflowhandlediv .col-sm-12{
    padding-top: 3px;
    padding-right: 5px;
    padding-bottom: 0px;
    padding-left: 0px;
 }

#nextnodediv {
	padding-top:7px;
}

&lt;/style>


&lt;script type=&quot;text/ng-template&quot; id=&quot;wftoobardiv_html&quot;>

&lt;div c2-div=&quot;&quot; id=&quot;wftoobardiv&quot; ng-hide=&quot;$state.wftoobardiv_hide&quot; ng-init=&quot;$state.wftoobardiv_hide=false&quot; 
	hide-variable=&quot;formentity.global.handleinline&quot; class=&quot;col-sm-12   no-padding&quot;>
	&lt;div class=&quot;col-sm-12 form-actions compact-form-acitons clearfix&quot; style=&quot;margin-top:10px;margin-bottom:0px;&quot;>
        &lt;div class=&quot;pull-left&quot;>
            &lt;button c2-button=&quot;&quot; id=&quot;newField21&quot; type=&quot;button&quot; class=&quot;c2-button btn  btn-primary btn-nl no-border ng-hide&quot; 
                ng-init=&quot;$state.newField21.disabled = false;$state.newField21.visible=$params.params.processInstanceId!=null&quot; 
                ng-show=&quot;$state.newField21.visible&quot; ng-disabled=&quot;$state.newField21.disabled&quot; show-default=&quot;$params.params.processInstanceId!=null&quot; 
                disabled-default=&quot;false&quot; ng-click=&quot;functions.autoswitchcommit($event)&quot;>
                   	 	提交
            &lt;/button>
            &lt;button c2-button=&quot;&quot; id=&quot;newField11&quot; type=&quot;button&quot; class=&quot;c2-button btn  btn-primary btn-nl no-border ng-hide&quot; 
                ng-init=&quot;$state.newField11.disabled = false;$state.newField11.visible=$params.params.processInstanceId!=null&quot; 
                ng-show=&quot;$state.newField11.visible&quot; ng-disabled=&quot;$state.newField11.disabled&quot; show-default=&quot;$params.params.processInstanceId!=null&quot; 
                disabled-default=&quot;false&quot; ng-click=&quot;functions.newField2_click($event)&quot;>
                    	流程监控
            &lt;/button>
            &lt;button c2-button=&quot;&quot; id=&quot;newField&quot; type=&quot;button&quot; class=&quot;c2-button btn  btn-primary btn-nl no-border ng-hide&quot; 
                ng-init=&quot;$state.newField.disabled = false;$state.newField.visible=false&quot; ng-show=&quot;$state.newField.visible&quot; 
                ng-disabled=&quot;$state.newField.disabled&quot; show-default=&quot;false&quot; disabled-default=&quot;false&quot; 
                ng-click=&quot;functions.newField_click($event)&quot;>
                    	退回
            &lt;/button>
            &lt;button c2-button=&quot;&quot; id=&quot;submitflow&quot; type=&quot;button&quot; class=&quot;c2-button btn  btn-primary btn-nl no-border&quot; 
                ng-init=&quot;$state.submitflow.disabled = false;$state.submitflow.visible=$params.params.processInstanceId==null&quot; 
                ng-show=&quot;$state.submitflow.visible&quot; ng-disabled=&quot;$state.submitflow.disabled&quot; 
                show-default=&quot;$params.params.processInstanceId==null&quot; disabled-default=&quot;false&quot; ng-click=&quot;functions.start_flow($event)&quot;>
                    	提交流程
            &lt;/button>
            &lt;button c2-button=&quot;&quot; id=&quot;newField4&quot; type=&quot;button&quot; class=&quot;c2-button btn  btn-primary btn-nl no-border&quot; 
                ng-init=&quot;$state.newField4.disabled = false;$state.newField4.visible=$params.params.processInstanceId==null&quot; 
                ng-show=&quot;$state.newField4.visible&quot; ng-disabled=&quot;$state.newField4.disabled&quot; 
                show-default=&quot;$params.params.processInstanceId==null&quot; disabled-default=&quot;false&quot; 
                ng-click=&quot;functions.newField4_click($event)&quot;>
                    	保存
            &lt;/button>
            &lt;button c2-button=&quot;&quot; id=&quot;button1&quot; type=&quot;button&quot; class=&quot;c2-button btn  btn-danger btn-nl no-border ng-hide&quot; 
                ng-init=&quot;$state.button1.disabled = false;$state.button1.visible=$model.actions.endprocess!=undefined&quot; 
                ng-show=&quot;$state.button1.visible&quot; ng-disabled=&quot;$state.button1.disabled&quot; show-default=&quot;$model.actions.endprocess!=undefined&quot; 
                disabled-default=&quot;false&quot; ng-click=&quot;functions.button_click($event)&quot;>
                    	结束
            &lt;/button>

            &lt;button c2-button=&quot;&quot; ng-repeat=&quot;button in formentity.global.buttons&quot; id=&quot;{{button.id}}&quot; type=&quot;button&quot; class=&quot;c2-button btn btn-primary btn-nl no-border ng-hide&quot;  
                ng-show=&quot;!button.hide&quot; ng-disabled=&quot;button.disabled&quot; 
                disabled-default=&quot;false&quot; ng-click=&quot;button.click()&quot;>
                   		{{button.name}}
            &lt;/button>
        &lt;/div>
 	&lt;/div>
 &lt;/div>
&lt;/script>
</form:htmls>
</form:Form>
